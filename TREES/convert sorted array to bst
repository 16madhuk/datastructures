
class Solution(object):
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        node = self.helperFunction(nums, 0, len(nums)-1)
        return node
        
    def helperFunction(self, nums, start, end):
        if (start > end or start < 0 or end < 0 or start >= len(nums) or end >= len(nums)):
            return None 
        else:
            mid = int((start + end)/2)
            node = TreeNode(nums[mid])
            node.left = self.helperFunction(nums, start, mid-1)
            node.right = self.helperFunction(nums, mid+1, end)
        return node
            
